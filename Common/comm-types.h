#ifndef __COMM_TYPES__
#define __COMM_TYPES__

#include <stdint.h>

typedef enum msg_type_ {
  SUBS_TO_COORD,
  COORD_TO_SUBS,
  PUB_TO_COORD,
  COORD_TO_PUB
} msg_type_t;

typedef enum sub_msg_type_ {
  SUB_MSG_DATA, // Data msg generated by published to be conveyed to subscribers
  /* Publisher Publishing a new msg or
  Subscriber subscribing a new msg*/
  SUB_MSG_ADD,
  /* Publisher UnPublishing a msg or
  Subscriber Unsubscribing a msg*/
  SUB_MSG_DELETE,
  /* Pub/Sub UnRegistering it with COORD*/ SUB_MSG_REGISTER,
  SUB_MSG_UNREGISTER,
  /* ERROR */
  SUB_MSG_ERROR,
} sub_msg_type_t;

typedef enum cmsg_pr_ {
  CMSG_PR_HIGH,
  CMSG_PR_LOW,
  CMSG_PR_MEDIUM,
  CMSG_PR_MAX,
} cmsg_pr_t;

typedef struct cmsg_ {
  /* Unique ID assigned by coordinator */
  uint32_t msg_id;

  /* Message direction P->C, C->P , C->S ,S->C*/
  /* P-Publisher, C->Coordinator, S->Subscriber*/
  msg_type_t msg_type;
  sub_msg_type_t sub_msg_type;

  cmsg_pr_t priority;

  uint32_t msg_code;

  union {
    uint32_t publisher_id;
    uint32_t subsciber_id;
  } id;

  uint16_t tlv_buffer_size;
  char tlv_buffer[0];

} cmsg_t;

#endif